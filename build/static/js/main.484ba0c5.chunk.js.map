{"version":3,"sources":["Form.jsx","index.js"],"names":["Form","useState","valone","setValone","valtwo","setValtwo","valthree","setValthree","className","value","onChange","event","parseInt","target","placeholder","type","name","required","onClick","items","height","length","App","useSpring","y","set","open","canceled","immediate","config","wobbly","stiff","close","velocity","bind","useDrag","last","vy","vxvy","my","movement","cancel","initial","get","filterTaps","bounds","top","rubberband","display","to","py","div","style","bottom","map","entry","i","key","window","location","href","children","ReactDOM","render","document","getElementById"],"mappings":"uPAgCeA,G,MA9BF,WACX,MAA4BC,qBAA5B,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA4BF,qBAA5B,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAgCJ,mBAAS,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,OACI,oCACE,0BAAMC,UAAU,MAChB,2BACIC,MAAOP,EACPQ,SAAU,SAAAC,GAAK,OAAIR,EAAUS,SAASD,EAAME,OAAOJ,SACnDK,YAAY,cACZC,KAAK,SACLC,KAAK,SACLC,UAAQ,IAEZ,2BACIR,MAAOL,EACPM,SAAU,SAAAC,GAAK,OAAIN,EAAUO,SAASD,EAAME,OAAOJ,SACnDK,YAAY,eACZC,KAAK,SACLC,KAAK,SACLC,UAAQ,IAEZ,4BAAQF,KAAK,SAASG,QAAS,SAAAP,GAAK,OAAIJ,EAAYL,EAAOE,KAA3D,UACA,wBAAII,UAAU,SAASF,OCpBzBa,EAAQ,CAAC,oBAAoB,UAC7BC,EAAwB,GAAfD,EAAME,OAAc,GAEnC,SAASC,IACP,MAAqBC,qBAAU,iBAAO,CAAEC,EAAGJ,MAA3C,mBAASI,EAAT,KAASA,EAAKC,EAAd,KAEMC,EAAO,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAGdF,EAAI,CAAED,EAAG,EAAGI,WAAW,EAAOC,OAAQF,EAAWE,SAAOC,OAASD,SAAOE,SAEpEC,EAAQ,WAAmB,IAAlBC,EAAiB,uDAAN,EACxBR,EAAI,CAAED,EAAGJ,EAAQQ,WAAW,EAAOC,OAAO,2BAAMA,SAAOE,OAAd,IAAqBE,gBAG1DC,EAAOC,aACX,YAAiE,IAA9DC,EAA6D,EAA7DA,KAAeC,EAA8C,cAAvDC,KAAuD,MAA5BC,EAA4B,cAAzCC,SAAyC,MAAvBC,EAAuB,EAAvBA,OAAQd,EAAe,EAAfA,SAG3CY,GAAM,IAAIE,IAIVL,EACFG,EAAc,GAATnB,GAAgBiB,EAAK,GAAML,EAAMK,GAAMX,EAAK,CAAEC,aAIhDF,EAAI,CAAED,EAAGe,EAAIX,WAAW,MAE/B,CAAEc,QAAS,iBAAM,CAAC,EAAGlB,EAAEmB,QAAQC,YAAY,EAAMC,OAAQ,CAAEC,IAAK,GAAKC,YAAY,IAG7EC,EAAUxB,EAAEyB,IAAG,SAACC,GAAD,OAASA,EAAK9B,EAAS,QAAU,UACtD,OACE,oCACE,kBAAC,IAAE+B,IAAH,CAAO3C,UAAU,KAAKU,QAAS,kBAAMc,MACrC,kBAAC,EAAD,OAEA,yBAAKxB,UAAU,aAAaU,QAASQ,IACrC,kBAAC,IAAEyB,IAAH,eAAO3C,UAAU,SAAY0B,IAA7B,CAAqCkB,MAAO,CAAEJ,UAASK,OAAO,iBAAD,OAAmBjC,EAAS,IAA5B,OAAsCI,OAK9FL,EAAMmC,KAAI,SAACC,EAAOC,GAAR,OACR,yBAAKC,IAAKF,EAAOrC,QAAS,kBAEjB,IAANsC,EACCE,OAAOC,SAASC,KAAO,+BACtB5B,KAGN6B,SAAUN,SAQtBO,IAASC,OAAO,kBAACzC,EAAD,MAAS0C,SAASC,eAAe,W","file":"static/js/main.484ba0c5.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./styles.css\";\nconst Form = () => {\n  const [valone, setValone] = useState();\n  const [valtwo, setValtwo] = useState();\n  const [valthree, setValthree] = useState(0);\n  return (\n      <>\n        <form className=\"up\">\n        <input\n            value={valone}\n            onChange={event => setValone(parseInt(event.target.value))}\n            placeholder=\"First Value\"\n            type=\"number\"\n            name=\"valone\"\n            required\n        />\n        <input\n            value={valtwo}\n            onChange={event => setValtwo(parseInt(event.target.value))}\n            placeholder=\"Second Value\"\n            type=\"number\"\n            name=\"valtwo\"\n            required\n        />\n        <button type=\"button\" onClick={event => setValthree(valone+valtwo)}>Submit</button>\n        <h1 className=\"check\">{valthree}</h1>\n        </form>\n      </>\n  );\n};\n\nexport default Form;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { useSpring, a, config } from 'react-spring'\nimport { useDrag } from 'react-use-gesture'\nimport './styles.css'\nimport Form from './Form'\nconst items = ['Learn about TFHE ','cancel']\nconst height = items.length * 60 + 80\n\nfunction App() {\n  const [{ y }, set] = useSpring(() => ({ y: height }))\n\n  const open = ({ canceled }) => {\n    // when cancel is true, it means that the user passed the upwards threshold\n    // so we change the spring config to create a nice wobbly effect\n    set({ y: 0, immediate: false, config: canceled ? config.wobbly : config.stiff })\n  }\n  const close = (velocity = 0) => {\n    set({ y: height, immediate: false, config: { ...config.stiff, velocity } })\n  }\n\n  const bind = useDrag(\n    ({ last, vxvy: [, vy], movement: [, my], cancel, canceled }) => {\n      // if the user drags up passed a threshold, then we cancel\n      // the drag so that the sheet resets to its open position\n      if (my < -70) cancel()\n\n      // when the user releases the sheet, we check whether it passed\n      // the threshold for it to close, or if we reset it to its open positino\n      if (last) {\n        my > height * 0.5 || vy > 0.5 ? close(vy) : open({ canceled })\n      }\n      // when the user keeps dragging, we just move the sheet according to\n      // the cursor position\n      else set({ y: my, immediate: true })\n    },\n    { initial: () => [0, y.get()], filterTaps: true, bounds: { top: 0 }, rubberband: true }\n  )\n\n  const display = y.to((py) => (py < height ? 'block' : 'none'))\n  return (\n    <>\n      <a.div className=\"bg\" onClick={() => close()}>\n      <Form />\n      </a.div>\n      <div className=\"action-btn\" onClick={open} />\n      <a.div className=\"sheet\" {...bind()} style={{ display, bottom: `calc(-100vh + ${height - 150}px)`, y }}>\n        {/* {items.map((entry, i) => (\n          <div key={entry} onClick={() => (i < items.length - 1 ? alert('clicked on ' + entry) : close())} children={entry} />\n          \n        ))} */}\n          {items.map((entry, i) => (\n             <div key={entry} onClick={() => \n              (\n                i === 0 ?(\n                 window.location.href = 'https://tfhe.github.io/tfhe/'\n                ):close()\n              )\n            } \n            children={entry} \n          />\n          ))}\n      </a.div>\n    </>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}